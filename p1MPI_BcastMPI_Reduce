#include <stdlib.h>
#include <math.h>
#include <mpi.h>
#include <stdbool.h>

bool isPrime(int n) {
    if (n < 2) return false;
    for (int i = 2; i * i <= n; i++) {
        if (n % i == 0)
            return false;
    }
    return true;
}

int main(int argc, char* argv[]) {
    int rank, size;
    

    MPI_Init(&argc, &argv);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);
     int x, y;
    
    
    if (rank == 0) {
       
        printf("Enter x and y:  \n");
        
        scanf("%d %d", &x, &y);
        
        
    }

    
   MPI_Bcast(&x, 1, MPI_INT, 0, MPI_COMM_WORLD);
    MPI_Bcast(&y, 1, MPI_INT, 0, MPI_COMM_WORLD);

    int rang = y - x ;
    int localCount = 0;

    if (rank != 0) {
        int subRang = rang /  (size - 1);
        int remainder = rang %  (size - 1);

        int start, end;
        if (rank == size - 1) {
            start = ((rank - 1) * subRang) + x;
            end = start + subRang + remainder - 1;
        } else {
            start = ((rank - 1) * subRang) + x;
            end = start + subRang - 1;
        }

         for (int i = start; i <= end && i <= y; i++) {
                if (isPrime(i)) {
                    localCount++;
            }
        }
    }

    int globalCount = 0;
    MPI_Reduce(&localCount, &globalCount, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);

    if (rank == 0) {
        printf("Total number of primes between %d and %d: %d\n", x, y, globalCount);
    }

    MPI_Finalize();
    return 0;
}
